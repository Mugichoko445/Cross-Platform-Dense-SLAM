#version 430 core
layout (binding = 0, r32f) writeonly uniform image2D mat;

layout (local_size_x = 1, local_size_y = 1) in;

layout (binding = 2, offset = 0) uniform atomic_uint g_icpDataIdx;

struct icpData
{
	float Ab[7];
};
layout (std430, binding = 2) buffer icpDataSrc
{
	icpData elemSrc[];
};

void main(void)
{
	ivec2 u = ivec2(gl_GlobalInvocationID.xy);

	float sum = 0.0;
	uint maxIdx = atomicCounter(g_icpDataIdx);
	for (uint idx = 0; idx < maxIdx; ++idx)
	{
		sum += elemSrc[idx].Ab[u.x] * elemSrc[idx].Ab[u.y];
	}

	imageStore(mat, u, vec4(sum));
}