#version 430

layout (binding = 0, r32f) readonly uniform image2D dataIn;		// Src depth image
layout (binding = 1, r32f) writeonly uniform image2D dataOut;	// Dst depth image

layout (local_size_x = 20, local_size_y = 20) in;

void main(void)
{
	ivec2 uv = ivec2(gl_GlobalInvocationID.xy);
	float depth[4] = {
		imageLoad(dataIn, uv * 2).r,
		imageLoad(dataIn, uv * 2 + ivec2(1, 0)).r,
		imageLoad(dataIn, uv * 2 + ivec2(0, 1)).r,
		imageLoad(dataIn, uv * 2 + ivec2(1, 1)).r
	};

	float res = (depth[0] + depth[1] + depth[2] + depth[3]) / 4.0;
	imageStore(dataOut, uv, vec4(res, res, res, 1.0));
}